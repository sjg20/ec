/* Copyright 2021 The Chromium OS Authors. All rights reserved.
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

/dts-v1/;

#include <cros/nuvoton/npcx.dtsi>
#include <dt-bindings/gpio_defines.h>
#include <nuvoton/npcx7m6fc.dtsi>

/ {
	model = "Google Trogdor Baseboard";

	aliases {
		i2c-0 = &i2c0_0;
		i2c-1 = &i2c1_0;
		i2c-2 = &i2c2_0;
		i2c-3 = &i2c3_0;
		i2c-5 = &i2c5_0;
		i2c-7 = &i2c7_0;
	};

	chosen {
		zephyr,sram = &sram0;
		zephyr,console = &uart1;
		zephyr,shell-uart = &uart1;
		zephyr,flash = &flash0;
		cros,rtc = &mtc;
	};

	named-i2c-ports {
		compatible = "named-i2c-ports";

		power {
			i2c-port = <&i2c0_0>;
			label = "POWER";
		};
		tcpc0 {
			i2c-port = <&i2c1_0>;
			label = "TCPC0";
		};
		tcpc1 {
			i2c-port = <&i2c2_0>;
			label = "TCPC1";
		};
		wlc {
			i2c-port = <&i2c3_0>;
			label = "WLC";
		};
		eeprom {
			i2c-port = <&i2c5_0>;
			label = "EEPROM";
		};
		sensor {
			i2c-port = <&i2c7_0>;
			label = "SENSOR";
		};
	};

	named-pwms {
		compatible = "named-pwms";

		kblight {
			pwms = <&pwm3 0 0>;
			label = "KBLIGHT";
			frequency = <10000>;
		};
		displight {
			pwms = <&pwm5 0 0>;
			label = "DISPLIGHT";
			frequency = <4800>;
		};
	};

	named-adc-channels {
		compatible = "named-adc-channels";

		vbus {
			label = "ADC_VBUS";
			enum-name = "VBUS";
			channel = <1>;
			/* Measure VBUS through a 1/10 voltage divider */
			mul = <10>;
		};
		amon_bmon {
			label = "ADC_AMON_BMON";
			enum-name = "AMON_BMON";
			channel = <2>;
			/*
			 * Adapter current output or battery charging/
			 * discharging current (uV) 18x amplification on
			 * charger side.
			 */
			mul = <1000>;
			div = <18>;
		};
		psys {
			label = "ADC_PSYS";
			enum-name = "PSYS";
			channel = <3>;
			/*
			 * ISL9238 PSYS output is 1.44 uA/W over 5.6K resistor,
			 * to read 0.8V @ 99 W, i.e. 124000 uW/mV.
			 */
			mul = <124000>;
		};
	};

	def_lvol_io_list {
		compatible = "nuvoton,npcx-lvolctrl-def";

		/* I2C_SDA0 & SCL0 */
		lvol_io_pads = <&lvol_iob4 &lvol_iob5>;
	};

	soc {
		cros_kb_raw: cros-kb-raw@400a3000 {
			compatible = "nuvoton,npcx-cros-kb-raw";
			reg = <0x400a3000 0x2000>;
			label = "CROS_KB_RAW_0";
			interrupts = <49 0>;
			clocks = <&pcc NPCX_CLOCK_BUS_APB1 NPCX_PWDWN_CTL1 0>;
			/* No KSO2 (it's inverted and implemented by GPIO) */
			pinctrl-0 = <&alt7_no_ksi0_sl /* KSI0 PIN31 */
				     &alt7_no_ksi1_sl /* KSI1 PIN30 */
				     &alt7_no_ksi2_sl /* KSI2 PIN27 */
				     &alt7_no_ksi3_sl /* KSI3 PIN26 */
				     &alt7_no_ksi4_sl /* KSI4 PIN25 */
				     &alt7_no_ksi5_sl /* KSI5 PIN24 */
				     &alt7_no_ksi6_sl /* KSI6 PIN23 */
				     &alt7_no_ksi7_sl /* KSI7 PIN22 */
				     &alt8_no_kso00_sl /* KSO00 PIN21 */
				     &alt8_no_kso01_sl /* KSO01 PIN20 */
				     &alt8_no_kso03_sl /* KSO03 PIN16 */
				     &alt8_no_kso04_sl /* KSO04 PIN15 */
				     &alt8_no_kso05_sl /* KSO05 PIN14 */
				     &alt8_no_kso06_sl /* KSO06 PIN13 */
				     &alt8_no_kso07_sl /* KSO07 PIN12 */
				     &alt9_no_kso08_sl /* KSO08 PIN11 */
				     &alt9_no_kso09_sl /* KSO09 PIN10 */
				     &alt9_no_kso10_sl /* KSO10 PIN07 */
				     &alt9_no_kso11_sl /* KSO11 PIN06 */
				     &alt9_no_kso12_sl /* KSO12 PIN05 */
				     &alt9_no_kso13_sl /* KSO13 PIN04 */
				     &alt9_no_kso14_sl /* KSO14 PIN82 */
				     >;
			wui_maps = <&wui_io31 &wui_io30 &wui_io27 &wui_io26
				    &wui_io25 &wui_io24 &wui_io23 &wui_io22>;
			status = "disabled";
		};

		fiu0: cros-flash@40020000 {
			compatible = "nuvoton,npcx-cros-flash";
			reg = <0x40020000 0x2000>;
			clocks = <&pcc NPCX_CLOCK_BUS_APB3 NPCX_PWDWN_CTL1 2>;
			size = <0x80000>;
			label = "FLASH_INTERFACE_UNIT0";
			pinctrl-0 = <>;
		};
	};

	/* Update flash size to 512KB from 196KB since we are using C variant */
	/delete-node/ flash@10090000;
	flash0: flash@10070000 {
		reg = <0x10070000 0x40000>;
	};
};

&uart1 {
	status = "okay";
	current-speed = <115200>;
	pinctrl-0 = <&altc_uart1_sl2>; /* Use UART1_SL2 ie. PIN64.65 */
};

&i2c0_0 {
	status = "okay";
	clock-frequency = <I2C_BITRATE_STANDARD>;
};

&i2c1_0 {
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST_PLUS>;
};

&i2c2_0 {
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST_PLUS>;
};

&i2c3_0 {
	/* Not used as no WLC connected */
	clock-frequency = <I2C_BITRATE_FAST>;
};

&i2c5_0 {
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST>;
};

&i2c7_0 {
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST>;
};

/* Keyboard backlight */
&pwm3 {
	status = "okay";
};

/* Display backlight */
&pwm5 {
	status = "okay";
};

&adc0 {
	status = "okay";
};
